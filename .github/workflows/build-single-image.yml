name: Build Single Model Image

on:
  workflow_call:
    inputs:
      model_id:
        required: true
        type: string
        description: 'HuggingFace model ID to pre-download'
      tag_suffix:
        required: true
        type: string
        description: 'Tag suffix for the image'
      date_tag:
        required: true
        type: string
        description: 'Date tag for the image'
      requires_token:
        required: true
        type: boolean
        description: 'Whether this model requires HF token'
    secrets:
      hf_token:
        required: false
        description: 'HuggingFace token for private models'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest-m
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ inputs.tag_suffix }}-latest
            type=raw,value=${{ inputs.tag_suffix }}-${{ inputs.date_tag }}
          labels: |
            org.opencontainers.image.title=Dynamic LoRA vLLM (${{ inputs.model_id }})
            org.opencontainers.image.description=vLLM server with pre-downloaded ${{ inputs.model_id }} model

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            MODEL_ID=${{ inputs.model_id }}
            HF_TOKEN=${{ inputs.requires_token && secrets.hf_token || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

      - name: Generate build summary
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Model:** ${{ inputs.model_id }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tags:** ${{ inputs.tag_suffix }}-latest, ${{ inputs.tag_suffix }}-${{ inputs.date_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry:** ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **HF Token Required:** ${{ inputs.requires_token }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Time:** $(date)" >> $GITHUB_STEP_SUMMARY